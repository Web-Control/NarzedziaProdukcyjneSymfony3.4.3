<?php

namespace AppBundle\Repository;
use Doctrine\ORM\EntityRepository;

$classLoader = new \Doctrine\Common\ClassLoader('DoctrineExtensions',__DIR__.'/../vendor/beberlei-doctrine-extensions');
$classLoader->register();

/**
 * DaneSuszeniaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DaneSuszeniaRepository extends \Doctrine\ORM\EntityRepository
{

    public function raportSuszenia($asortyment_id,$data_form,$nr_suszarni)
    {   
       // $data = date_format($data_form, 'Y-m-d'); //Zamieniamy obiekt na string
        $data=$data_form;
        $kolejny_dzien = date('Y-m-d', strtotime($data . ' +1 day'));
        $godzina8='8:00:00';
        $godzina6='6:00:00';

        $conn = $this->getEntityManager()->getConnection();
        
        $sql = "SELECT NrSuszarni,Data,Godzina,PredkoscBlanszownika,TemperaturaBlanszownika,PredkoscSiatkiNr7,PredkoscSiatkiNr6,PredkoscSiatkiNr5,PredkoscSiatkiNr4,PredkoscSiatkiNr3,PredkoscSiatkiNr2,PredkoscSiatkiNr1,CzasSuszenia,TemperaturaGora,TemperaturaDol,Wilgotnosc,WykonawcaPomiaru FROM dane_suszenia WHERE asortyment_id=:asortyment AND Data=:data AND Godzina >= :godzina8 AND NrSuszarni=:nr_suszarni
        UNION ALL
        SELECT NrSuszarni,Data,Godzina,PredkoscBlanszownika,TemperaturaBlanszownika,PredkoscSiatkiNr7,PredkoscSiatkiNr6,PredkoscSiatkiNr5,PredkoscSiatkiNr4,PredkoscSiatkiNr3,PredkoscSiatkiNr2,PredkoscSiatkiNr1,CzasSuszenia,TemperaturaGora,TemperaturaDol,Wilgotnosc,WykonawcaPomiaru FROM dane_suszenia WHERE asortyment_id=:asortyment AND Data=:kolejny_dzien AND Godzina <= :godzina6 AND NrSuszarni=:nr_suszarni ORDER BY Data,Godzina ASC ";
        $stmt = $conn->prepare($sql);
     
        $stmt->execute(array('asortyment' => $asortyment_id,'data' => $data, 'godzina8'=>$godzina8, 'asortyment' => $asortyment_id, 'kolejny_dzien' => $kolejny_dzien,'godzina6'=> $godzina6, 'nr_suszarni' => $nr_suszarni));
      
        $wynik = $stmt->fetchAll();
       // dump($stmt->fetchAll());
        return $wynik;
       // var_dump($stmt->fetchAll());die;
        //return json_encode($wynik);

    }

    public function raportSuszeniaDaneDodatkowe($asortyment_id,$data_form,$nr_suszarni)
    {   
       // $data = date_format($data_form, 'Y-m-d'); //Zamieniamy obiekt na string
        $data=$data_form;

        $conn = $this->getEntityManager()->getConnection();
        
        $sql = "SELECT NrSuszarni,Data,OcenaTowaruZmiany1,OcenaTowaruZmiany2,OcenaTowaruZmiany3,IloscSuszuZmiana1,IloscSuszuZmiana2,IloscSuszuZmiana3,Dostawca,Uwagi,Zdjecia,OpisZdjecia FROM dane_suszenia WHERE asortyment_id=:asortyment AND Data=:data AND NrSuszarni=:nr_suszarni ";
        $stmt = $conn->prepare($sql);
     
        $stmt->execute(array('asortyment' => $asortyment_id,'data' => $data, 'nr_suszarni' => $nr_suszarni));
      
        $wynik = $stmt->fetchAll();
       // dump($stmt->fetchAll());
        return $wynik;
       // var_dump($stmt->fetchAll());die;
        //return json_encode($wynik);

    }

    public function dziennaSredniaWilgotnosc($asortyment_id,$data_form,$nr_suszarni)
    {   
       // $data = date_format($data_form, 'Y-m-d'); //Zamieniamy obiekt na string
        $data=$data_form;
        $kolejny_dzien = date('Y-m-d', strtotime($data . ' +1 day'));
        $godzina8='8:00:00';
        $godzina6='6:00:00';

        $Suma_Wilgotnosc1="";
        $Suma_Wilgotnosc2="";
        $Suma_Wilgotnosc="";
        $Ilosc_pomiarow1="";
        $Ilosc_pomiarow2="";
        $Ilosc_pomiarow="";
        $Srednia_Wilgotnosc="";
        $precision="";

        $conn = $this->getEntityManager()->getConnection();
         //Obliczamy ilosc pomiarów wilgotności pierwszego dnia raportu
        $sql = "SELECT COUNT(Wilgotnosc) FROM dane_suszenia WHERE asortyment_id=:asortyment AND Data=:data AND NrSuszarni=:nr_suszarni AND Godzina >= :godzina8 AND Wilgotnosc > 0";
        $stmt = $conn->prepare($sql);
     
        $stmt->execute(array('asortyment' => $asortyment_id,'data' => $data, 'nr_suszarni' => $nr_suszarni, 'godzina8' => $godzina8 ));
      
        $Ilosc_pomiarow1 = $stmt->fetchAll();
        dump($Ilosc_pomiarow1);

         //Obliczamy sumę wilgotności pierwszego dnia raportu
        $sql = "SELECT SUM(Wilgotnosc) FROM dane_suszenia WHERE asortyment_id=:asortyment AND Data=:data AND NrSuszarni=:nr_suszarni AND Godzina >= :godzina8 AND Wilgotnosc > 0";
        $stmt = $conn->prepare($sql);
     
        $stmt->execute(array('asortyment' => $asortyment_id,'data' => $data, 'nr_suszarni' => $nr_suszarni, 'godzina8' => $godzina8 ));

        $Suma_Wilgotnosc1 = $stmt->fetchAll();

         //Obliczamy ilosc pomiarów wilgotności drugiego dnia raportu
        $sql = "SELECT COUNT(Wilgotnosc) FROM dane_suszenia WHERE asortyment_id=:asortyment AND Data=:data AND NrSuszarni=:nr_suszarni AND Godzina <= :godzina6 AND Wilgotnosc > 0";
        $stmt = $conn->prepare($sql);
     
        $stmt->execute(array('asortyment' => $asortyment_id,'data' => $kolejny_dzien, 'nr_suszarni' => $nr_suszarni, 'godzina6' => $godzina6 ));

        $Ilosc_pomiarow2 = $stmt->fetchAll();


        //Obliczamy sumę pomiarów wilgotności drugiego dnia raportu
        $sql = "SELECT SUM(Wilgotnosc) FROM dane_suszenia WHERE asortyment_id=:asortyment AND Data=:data AND NrSuszarni=:nr_suszarni AND Godzina <= :godzina6 AND Wilgotnosc > 0";
        $stmt = $conn->prepare($sql);
     
        $stmt->execute(array('asortyment' => $asortyment_id,'data' => $kolejny_dzien, 'nr_suszarni' => $nr_suszarni, 'godzina6' => $godzina6 ));

        $Suma_Wilgotnosc2 = $stmt->fetchAll();

        //Obliczamy wilgotność końcową
        $Suma_Wilgotnosc=$Suma_Wilgotnosc1['0']['SUM(Wilgotnosc)']+$Suma_Wilgotnosc2['0']['SUM(Wilgotnosc)'];
        $Ilosc_pomiarow=$Ilosc_pomiarow1['0']['COUNT(Wilgotnosc)']+$Ilosc_pomiarow2['0']['COUNT(Wilgotnosc)'];
        
       // dump($Suma_Wilgotnosc);
        //dump($Ilosc_pomiarow);

        $Srednia_Wilgotnosc=($Suma_Wilgotnosc/$Ilosc_pomiarow);

        return  round($Srednia_Wilgotnosc,$precision=2);
        ;
       // var_dump($stmt->fetchAll());die;
        //return json_encode($wynik);

    }

    public function dziennaIloscSuszuDlaSuszarni($asortyment_id,$data_form,$nr_suszarni)
    {   
       // $data = date_format($data_form, 'Y-m-d'); //Zamieniamy obiekt na string
        $data=$data_form;

        $conn = $this->getEntityManager()->getConnection();
        
        $sql = "SELECT SUM(IloscSuszuZmiana1+IloscSuszuZmiana2+IloscSuszuZmiana3) FROM dane_suszenia WHERE asortyment_id=:asortyment AND Data=:data AND NrSuszarni=:nr_suszarni ";
        $stmt = $conn->prepare($sql);
     
        $stmt->execute(array('asortyment' => $asortyment_id,'data' => $data, 'nr_suszarni' => $nr_suszarni));
      
        $wynik = $stmt->fetchAll();
        //dump($wynik);
        return $wynik['0']['SUM(IloscSuszuZmiana1+IloscSuszuZmiana2+IloscSuszuZmiana3)'];
       // var_dump($stmt->fetchAll());die;
        //return json_encode($wynik);

    }

    public function calkowitaIloscSuszuDanegoDnia($asortyment_id,$data_form)
    {   
       // $data = date_format($data_form, 'Y-m-d'); //Zamieniamy obiekt na string
        $data=$data_form;

        $conn = $this->getEntityManager()->getConnection();
        
        $sql = "SELECT CalkowitaIloscSuszu FROM dane_suszenia WHERE asortyment_id=:asortyment AND Data=:data AND CalkowitaIloscSuszu > 0 ";
        $stmt = $conn->prepare($sql);
     
        $stmt->execute(array('asortyment' => $asortyment_id,'data' => $data));
      
        $wynik = $stmt->fetchAll();
        dump($wynik);
        return $wynik['0']['CalkowitaIloscSuszu'];
       // var_dump($stmt->fetchAll());die;
        //return json_encode($wynik);

    }

    public function raportSuszenia2($podana_data,$asortyment,$nr_suszarni)
    {   
        $data = date_format($podana_data, 'Y-m-d'); //Zamieniamy obiekt na string
        $kolejny_dzien = date('Y-m-d', strtotime($data . ' +1 day'));
        $godzina8='8:00:00';
        $godzina6='6:00:00';

        $qb = $this->createQueryBuilder('dane_suszenia')
       // ->addOrderBy('dane_suszenia.data', 'ASC')
        ->andWhere('dane_suszenia.data = :data')
        ->setParameter('data', $data)
        ->andWhere('dane_suszenia.godzina >= :godzina8')
        ->setParameter('godzina8', $godzina8)
        //->orWhere('dane_suszenia.data = :kolejnyDzien')
        //->setParameter('kolejnyDzien',$kolejny_dzien)
        // ->orWhere('dane_suszenia.godzina <= :godzina6')
        // ->setParameter('godzina6', $godzina6)
        ->andWhere('dane_suszenia.Asortyment = :asortyment')
        ->setParameter('asortyment',$asortyment)
        ->andWhere('dane_suszenia.nrSuszarni = :nrSuszarni')
        ->setParameter('nrSuszarni',$nr_suszarni)
        ->addOrderBy('dane_suszenia.data', 'ASC')
        ->addOrderBy('dane_suszenia.godzina', 'ASC');
        $query = $qb->getQuery();
        dump($query->getDQL());

        $qb2 = $this->createQueryBuilder('dane_suszenia')
        // ->addOrderBy('dane_suszenia.data', 'ASC')
         ->andWhere('dane_suszenia.data = :data')
         ->setParameter('data', $kolejny_dzien)
         ->andWhere('dane_suszenia.godzina <= :godzina6')
         ->setParameter('godzina6', $godzina6)
         ->andWhere('dane_suszenia.Asortyment = :asortyment')
         ->setParameter('asortyment',$asortyment)
         ->andWhere('dane_suszenia.nrSuszarni = :nrSuszarni')
         ->setParameter('nrSuszarni',$nr_suszarni)
         ->addOrderBy('dane_suszenia.data', 'ASC')
         ->addOrderBy('dane_suszenia.godzina', 'ASC');
         $query2 = $qb2->getQuery();
         dump($query2->getDQL());

         $wynik1 = $query->execute();
         $wynik2 = $query2->execute();

        $wynik = array_merge($wynik1+ $wynik2);

        return $wynik;
        
    }
    
}